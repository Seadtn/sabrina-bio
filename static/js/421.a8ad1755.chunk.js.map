{"version":3,"file":"static/js/421.a8ad1755.chunk.js","mappings":"2JAGA,MAiBA,EAjBmBA,IACf,MAAOC,EAAQC,IAAcC,EAAAA,EAAAA,WAAS,IAChC,SAACC,EAAQ,aAACC,EAAY,MAACC,EAAK,GAACC,KAAMC,GAAcR,EAMvD,OACIS,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,SAAAD,SAASL,KACTM,EAAAA,EAAAA,KAAA,YAAWJ,EAAYJ,SAAUA,EAAUS,OAP/BC,IAChBZ,GAAW,EAAK,EAMoDD,QAASA,EAAQc,cACjFH,EAAAA,EAAAA,KAAA,QAAMI,UAAU,aAAYL,SAAEN,MAC/B,C,oGCXX,MAuFA,EAvFeY,KACX,MAAOC,EAAMC,IAAYhB,EAAAA,EAAAA,UAAS,KAE3BiB,EAAOC,IAAalB,EAAAA,EAAAA,UAAS,CAChCmB,MAAM,GACNC,SAAS,KAGPC,EAAQ,CACV,CACIjB,GAAG,EACHD,MAAM,gBACNmB,KAAK,QACLC,KAAK,QACLC,YAAY,sBACZtB,aAAa,6BACbuB,UAAS,GAEb,CACIrB,GAAG,EACHD,MAAM,WACNmB,KAAK,WACLC,KAAK,WACLC,YAAY,sBACZtB,aAAa,uDACbuB,UAAS,EACTC,QAAQ,uBAIVzB,EAAYU,IACdO,EAAU,IAAID,EAAO,CAACN,EAAEgB,OAAOL,MAAMX,EAAEgB,OAAOC,OAAO,EAkBzD,OACInB,EAAAA,EAAAA,KAAA,OAAKI,UAAU,UAASL,UACxBF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,WAAUL,SAAA,EACrBC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,eAAcL,UACzBC,EAAAA,EAAAA,KAAA,OAAKoB,IAAK,mBAAoBC,IAAI,eAEtCrB,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUL,UACrBF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,WAAUL,SAAA,EACrBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,OAAKL,GAAG,iBACRE,EAAAA,EAAAA,MAAA,QAAMF,GAAG,SAAS2B,SAzBZpB,IAClBK,GAAS,GACTL,EAAEqB,iBACF,IAAIC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UACxCC,EAAOL,GAASA,EAAMM,QAAOD,GAAQA,EAAKnB,QAAUF,EAAOE,QAE5Dc,GAASA,EAAMO,MAAKF,GAAQA,EAAKnB,QAAUF,EAAOE,SAAUc,EAAMO,MAAKF,GAAQA,EAAKlB,WAAaH,EAAOG,YACvGgB,aAAaK,QAAQ,WAAYP,KAAKQ,UAAU,CAACC,SAASL,EAAKK,SAASxB,MAAMF,EAAOE,MAAMC,SAASH,EAAOG,YAC3GwB,OAAOC,SAASC,QAAO,IAEvB9B,EAAS,0CACb,EAcqDR,SAAA,EACrCC,EAAAA,EAAAA,KAAA,QAAMI,UAAU,SAAQL,SAAEO,IAEtBM,GAAUA,EAAO0B,KAAKC,IAEdvC,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,IACFD,EAAO1B,KAAM0B,EAAM1B,KACvBC,KAAMyB,EAAMzB,KACZC,YAAawB,EAAMxB,YACnBI,MAAOX,EAAO+B,EAAM1B,MACpBrB,SAAUA,GALE+C,EAAM5C,OAYlCK,EAAAA,EAAAA,KAAA,UAAQc,KAAK,SAASV,UAAU,MAAKL,SAAC,WACtCF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,4BAAwBC,EAAAA,EAAAA,KAACyC,EAAAA,GAAI,CAACC,GAAG,WAAU3C,SAAC,iCAK7D,C","sources":["components/FormInput.jsx","components/SignIn.jsx"],"sourcesContent":["import React,{useState} from 'react'\r\nimport '../App.css'\r\n\r\nconst FormInput = (props) =>{\r\n    const [focused,setFocused] = useState(false)\r\n    const {onChange,errorMessage,label,id,...inputProps} = props\r\n\r\n    const handleFocus =(e) =>{ \r\n        setFocused(true)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <label >{label}</label>\r\n            <input {...inputProps} onChange={onChange} onBlur={handleFocus} focused={focused.toString()}/>\r\n            <span className=\"error-span\">{errorMessage}</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormInput","import React,{useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport FormInput from './FormInput'\r\nimport \"../App.css\"\r\n\r\nconst SignIn = () =>{\r\n    const [error,setError] = useState(\"\");\r\n\r\n    const [values,setValues] = useState({\r\n        email:\"\",\r\n        password:\"\",\r\n    })\r\n\r\n    const inputs =[\r\n        {\r\n            id:1,\r\n            label:\"Email address\",\r\n            name:\"email\",\r\n            type:\"email\",\r\n            placeholder:\"Enter email address\",\r\n            errorMessage:\"Email address is invalid. \",\r\n            required:true,\r\n        },\r\n        {\r\n            id:2,\r\n            label:\"Password\",\r\n            name:\"password\",\r\n            type:\"password\",\r\n            placeholder:\"Enter user password\",\r\n            errorMessage:\"Password should be between 8 to 20 characters long. \",\r\n            required:true,\r\n            pattern:\"^[A-Za-z0-9]{8,20}\",\r\n        }\r\n    ]\r\n\r\n    const onChange = (e) =>{\r\n        setValues({...values,[e.target.name]:e.target.value})\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        setError(false)\r\n        e.preventDefault();  \r\n        let users = JSON.parse(localStorage.getItem('users'))\r\n        let user = users && users.filter(user => user.email === values.email)\r\n\r\n        if(users && users.some(user => user.email === values.email) && users.some(user => user.password === values.password)){\r\n            localStorage.setItem('LoggedIn', JSON.stringify({username:user.username,email:values.email,password:values.password})); \r\n            window.location.reload(false);\r\n        }else{\r\n            setError(\"Invalid email and password combination.\")\r\n        }\r\n\r\n    }\r\n    // console.log(values)\r\n    return (\r\n        <div className=\"content\">\r\n        <div className=\"row row2\">   \r\n            <div className=\"product-col4\">\r\n                <img src={\"./images/log.svg\"} alt=\"sign-in\"/>\r\n            </div>\r\n            <div className=\"sign-col\">\r\n                <div className=\"form-box\">\r\n                    <h2>login</h2>\r\n                    <div id=\"login-error\"></div>\r\n                    <form id=\"signIn\" onSubmit={handleSubmit}>\r\n                        <span className=\"e-span\">{error}</span>\r\n                        {\r\n                            inputs && inputs.map((input)=>{\r\n                                return(\r\n                                    <FormInput key={input.id} \r\n                                        {...input} name={input.name}\r\n                                        type={input.type} \r\n                                        placeholder={input.placeholder}\r\n                                        value={values[input.name]}\r\n                                        onChange={onChange}\r\n\r\n                                    />\r\n                                   \r\n                                )\r\n                            })\r\n                        }\r\n                        <button type=\"submit\" className=\"btn\">LOGIN</button>\r\n                        <p>Don't have an account ? <Link to=\"/sign-up\">Register here</Link></p>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        \r\n)\r\n}\r\n\r\nexport default SignIn"],"names":["props","focused","setFocused","useState","onChange","errorMessage","label","id","inputProps","_jsxs","_Fragment","children","_jsx","onBlur","e","toString","className","SignIn","error","setError","values","setValues","email","password","inputs","name","type","placeholder","required","pattern","target","value","src","alt","onSubmit","preventDefault","users","JSON","parse","localStorage","getItem","user","filter","some","setItem","stringify","username","window","location","reload","map","input","FormInput","Link","to"],"sourceRoot":""}