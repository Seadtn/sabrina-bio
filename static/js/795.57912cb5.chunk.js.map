{"version":3,"file":"static/js/795.57912cb5.chunk.js","mappings":"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","sources":["components/FormInput.jsx","components/SignUp.jsx"],"sourcesContent":["import React,{useState} from 'react'\r\nimport '../App.css'\r\n\r\nconst FormInput = (props) =>{\r\n    const [focused,setFocused] = useState(false)\r\n    const {onChange,errorMessage,label,id,...inputProps} = props\r\n\r\n    const handleFocus =(e) =>{ \r\n        setFocused(true)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <label >{label}</label>\r\n            <input {...inputProps} onChange={onChange} onBlur={handleFocus} focused={focused.toString()}/>\r\n            <span className=\"error-span\">{errorMessage}</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormInput","import React,{useState} from 'react'\r\nimport \"../App.css\"\r\nimport {Link,useNavigate} from 'react-router-dom'\r\nimport FormInput from './FormInput'\r\n\r\nconst SignUp = () =>{\r\n    let navigate = useNavigate()\r\n\r\n    const [error,setError] = useState(\"\");\r\n    const [values,setValues] = useState({\r\n        email:\"\",\r\n        username:\"\",\r\n        password:\"\",\r\n    })\r\n\r\n    const inputs =[\r\n        {\r\n            id:1,\r\n            label:\"Username\",\r\n            name:\"username\",\r\n            type:\"text\",\r\n            placeholder:\"Enter username\",\r\n            errorMessage:\"Username is invalid. \",\r\n            required:true,\r\n            pattern:\"^[A-Za-z0-9 ]{3,20}\"\r\n        },\r\n        {\r\n            id:2,\r\n            label:\"Email address\",\r\n            name:\"email\",\r\n            type:\"email\",\r\n            placeholder:\"Enter email address\",\r\n            errorMessage:\"Email address is invalid. \",\r\n            required:true,\r\n        },\r\n        {\r\n            id:3,\r\n            label:\"Password\",\r\n            name:\"password\",\r\n            type:\"password\",\r\n            placeholder:\"Enter user password\",\r\n            errorMessage:\"Password should be between 8 to 20 characters long. \",\r\n            required:true,\r\n            pattern:\"^[A-Za-z0-9]{8,20}\"\r\n        }\r\n    ]\r\n\r\n    const onChange = (e) =>{\r\n        setValues({...values,[e.target.name]:e.target.value})\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        setError(false)\r\n        e.preventDefault();\r\n        let users = JSON.parse(localStorage.getItem('users'))\r\n\r\n        let messages = []\r\n\r\n        if(users !== null && users.some(user => user.username === values.username)){\r\n            messages.push(\"The username already exists.\")\r\n        }\r\n        if(users !== null && users.some(user => user.email === values.email)){\r\n            messages.push(\"The email address already exists.\")\r\n        }\r\n\r\n        if(messages.length > 0){\r\n            const s_error = messages\r\n            localStorage.setItem(\"sign-up-errors\",JSON.stringify(s_error))\r\n            setError(\"username or email address already exists.\")\r\n        }else{\r\n            if(users){\r\n                users.push({username:values.username,email:values.email,password:values.password})\r\n                localStorage.setItem(\"users\",JSON.stringify(users))\r\n            }else{\r\n                localStorage.setItem('users', JSON.stringify([{username:values.username,email:values.email,password:values.password}]));\r\n            }\r\n           navigate(\"/sign-in\", { replace: true });\r\n        }\r\n    }\r\n\r\n    return (\r\n \r\n    <div className=\"content\">\r\n        <div className=\"row row2\">\r\n            <div className=\"product-col4\">\r\n                <img src={\"./images/log.svg\"} alt =\"Sign-up\"/>\r\n            </div>\r\n            <div className=\"sign-col\">\r\n                <div className=\"form-box\">\r\n                    <h2>Register</h2>\r\n                    <form id=\"signIn\" onSubmit={handleSubmit}>\r\n                        <span className=\"e-span\">{error}</span>\r\n                        {\r\n                            inputs.map((input)=>{\r\n                                return(\r\n                                    <FormInput key={input.id} \r\n                                        {...input} name={input.name}\r\n                                        type={input.type} \r\n                                        placeholder={input.placeholder}\r\n                                        value={values[input.name]}\r\n                                        onChange={onChange}\r\n                                    />\r\n                                   \r\n                                )\r\n                            })\r\n                        }\r\n                        <button type=\"submit\" className=\"btn\">SIGN UP</button>\r\n                        <p>Already have an account ? <Link to=\"/sign-in\">Login here</Link></p>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  \r\n\r\n    )\r\n}\r\n\r\nexport default SignUp"],"names":["props","focused","setFocused","useState","onChange","errorMessage","label","id","inputProps","_jsxs","_Fragment","children","_jsx","onBlur","e","toString","className","SignUp","navigate","useNavigate","error","setError","values","setValues","email","username","password","target","name","value","src","alt","onSubmit","preventDefault","users","JSON","parse","localStorage","getItem","messages","some","user","push","length","s_error","setItem","stringify","replace","type","placeholder","required","pattern","map","input","FormInput","Link","to"],"sourceRoot":""}