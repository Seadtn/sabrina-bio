server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Serve favicon.ico from the public directory under /sabrina-bio
    location = /favicon.ico {
        alias /usr/share/nginx/html/public/favicon.ico;
        access_log off;
        expires 30d;
        add_header Cache-Control "public";
    }

    # Handle the root path (ensure React Router works)
    location / {
        try_files $uri /index.html =404;
    }

    # Handle /sabrina-bio path for React app
    location /sabrina-bio {
        alias /usr/share/nginx/html;
        try_files $uri /sabrina-bio/index.html =404;

        # Serve favicon for /sabrina-bio path
        location = /sabrina-bio/favicon.ico {
            alias /usr/share/nginx/html/public/favicon.ico;
            access_log off;
            expires 30d;
            add_header Cache-Control "public";
        }
    }

    # Serve static files
    location /static/ {
        alias /usr/share/nginx/html/static/;
        expires 1y;
        add_header Cache-Control "public";
        try_files $uri =404;
    }

    # Proxy API requests to backend
    location /api {
        proxy_pass http://backend:8080;  # Assuming 'backend' is the name of your API container
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Add CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
    }

    # Handle 404 errors and serve index.html for non-existent routes
    error_page 404 /index.html;
}
