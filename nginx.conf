# HTTP Server
server {
    listen 80;
    server_name sabrina-bio.tn www.sabrina-bio.tn;
    return 301 https://$host$request_uri; # Use $host to dynamically redirect based on the request's hostname
}

# HTTPS Server
server {
    listen 443 ssl;
    
    http2 on;
    ssl_certificate /etc/ssl/certificate.crt; 
    ssl_certificate_key /etc/ssl/private.key;
    
    server_name sabrina-bio.tn www.sabrina-bio.tn;
    root /usr/share/nginx/html;
    index index.html;

    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    location / {
        try_files $uri $uri/ /index.html;
    }

    # Proxy configuration for API calls
    location /api/v1/ {
        proxy_pass http://135.125.1.158:8080/api/v1/; # Updated with explicit IP instead of "backend"
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' '*' always;
        
        # Handle OPTIONS method
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
}
